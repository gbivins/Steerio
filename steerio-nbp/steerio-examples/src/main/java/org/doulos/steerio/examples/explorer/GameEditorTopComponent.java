/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.doulos.steerio.examples.explorer;

import com.gameprogblog.engine.Game;
import com.gameprogblog.engine.GameScreen;
import java.awt.BorderLayout;
import java.awt.Color;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import org.doulos.steerio.examples.IGameLauncher;
import org.magnos.steer.behavior.SteerBasicExample;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import org.openide.util.lookup.Lookups;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.doulos.steerio.examples.explorer//GameEditor//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "GameEditorTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "org.doulos.steerio.examples.explorer.GameEditorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_GameEditorAction",
        preferredID = "GameEditorTopComponent"
)
@Messages({
    "CTL_GameEditorAction=GameEditor",
    "CTL_GameEditorTopComponent=GameEditor Window",
    "HINT_GameEditorTopComponent=This is a GameEditor window"
})
public final class GameEditorTopComponent extends TopComponent {

    private InstanceContent ic;

    public GameEditorTopComponent() {
        initComponents();
        setName(Bundle.CTL_GameEditorTopComponent());
        setToolTipText(Bundle.HINT_GameEditorTopComponent());
    }

    public GameEditorTopComponent(IGameLauncher launcher) {

        setLayout(new BorderLayout());

        setName(launcher.getGameTitle());
        setToolTipText(launcher.getGameTitle());
        ic = new InstanceContent();
        ic.add(launcher);
        
        associateLookup(new AbstractLookup(ic));

    }

    class BackgroundTask extends SwingWorker<Void, Object> {

        @Override
        public Void doInBackground() {

            Game game = getLookup().lookup(Game.class);
            GameScreen screen = getLookup().lookup(GameScreen.class);
            if (game != null && screen != null) {
                game.start(screen.getScene());
                screen.start();
            } else if (screen != null) {
                screen.start();
            }
            return null;
        }

        @Override
        protected void done() {
            Game game = getLookup().lookup(Game.class);
            IGameLauncher launcher = getLookup().lookup(IGameLauncher.class);

            if (game != null) {

                System.out.println("Ending [" + launcher.getGameTitle() + "]");
                game.destroy();
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {

        IGameLauncher launcher = getLookup().lookup(IGameLauncher.class);
        GameScreen createGame = launcher
                .createGame(SteerBasicExample.DEFAULT_WIDTH, SteerBasicExample.DEFAULT_HEIGHT, true, Color.BLACK);
        add(createGame, BorderLayout.CENTER);
        ic.add(createGame);
        ic.add(createGame.getGame());
        // TODO add custom code on component opening
        new BackgroundTask().execute();
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
